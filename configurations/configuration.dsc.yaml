# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2

##########################################################################################################
# This configuration will install the tools necessary to get started developing in dotnet on Windows 11  #
# NOTE: Run: winget configure .\configuration.dsc.yaml --accept-configuration-agreements                 #
##########################################################################################################
properties:
  configurationVersion: 0.2.0
  resources:
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: 7Zip
      directives:
        description: Install 7Zip
        allowPrerelease: true
      settings:
        id: "7zip.7zip"
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: FiddlerClassic
      directives:
        description: Install Telerik Fiddler Classic
        allowPrerelease: true
      settings:
        id: Telerik.Fiddler.Classic
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Fork
      directives:
        description: Install fork
        allowPrerelease: true
      settings:
        id: Fork.Fork
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git
      directives:
        description: Install Git
        allowPrerelease: true
      settings:
        id: Git.Git
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHubClI
      directives:
        description: Install GitHub ClI
        allowPrerelease: true
      settings:
        id: GitHub.cli
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GoogleChrome
      directives:
        description: Install Google Chrome
        allowPrerelease: true
      settings:
        id: Google.Chrome
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Jq
      directives:
        description: Install jq
        allowPrerelease: true
      settings:
        id: jqlang.jq
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: NodeJs
      directives:
        description: Install NodeJS
        allowPrerelease: true
      settings:
        id: OpenJS.NodeJS.LTS
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: NotepadPlusPlus
      directives:
        description: Install Notepad++
        allowPrerelease: true
      settings:
        id: Notepad++.Notepad++
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: NugetPackageExplorer
      directives:
        description: Nuget Package Explorer
        allowPrerelease: true
      settings:
        id: "9WZDNCRDMDM3"
        source: msstore
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: PowerShell7
      directives:
        description: Install PowerShell 7
        allowPrerelease: true
      settings:
        id: Microsoft.PowerShell
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Slack
      directives:
        description: Install Slack
        allowPrerelease: true
      settings:
        id: SlackTechnologies.Slack
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: TortoiseGit
      directives:
        description: Install TortoiseGit
        allowPrerelease: true
      settings:
        id: TortoiseGit.TortoiseGit
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Ubuntu2204
      directives:
        description: Ubuntu 22.04 LTS
        allowPrerelease: true
      settings:
        id: Canonical.Ubuntu.2204
        source: winget
      dependsOn:
        - Wsl
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: VisualStudioCode
      directives:
        description: Install Visual Studio Code
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
    - resource: PSDscResources/Script
      id: VisualStudioCode Extensions
      directives:
        description: Script to install Visual Studio Code extensions
        allowPrerelease: true
      settings:
        GetScript: |
          # Not using this at the moment.
        TestScript: |
          # Ignore deprecation warnings & reload path
          $env:NODE_OPTIONS="--no-deprecation"
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = code --list-extensions

          # Check if all required extensions are installed
          $allInstalled = $extensions.name | ForEach-Object { $_ -in $installedExtensions }

          return $allInstalled -contains $false -eq $false
        SetScript: |
          # Ignore deprecation warnings & reload path
          $env:NODE_OPTIONS="--no-deprecation"
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = code --list-extensions

          # Install each extension if not already installed
          foreach ($extension in $extensions) {
            if ($installedExtensions -notcontains $extension.name) {
              code --install-extension $extension.name
            }
          }
      dependsOn:
        - VisualStudioCode
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: WinMerge
      directives:
        description: Install WinMerge
        allowPrerelease: true
      settings:
        id: WinMerge.WinMerge
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Wsl
      directives:
        description: Install Windows Subsystem for Linux
        allowPrerelease: true
      settings:
        id: "9P9TQF7MRM4R"
        source: msstore