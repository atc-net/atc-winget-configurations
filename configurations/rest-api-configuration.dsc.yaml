# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2

##########################################################################################################
# This configuration will install the tools necessary to get started developing with rest-api's          #
# NOTE: Run: winget configure .\rest-api-configuration.dsc.yaml --accept-configuration-agreements        #
##########################################################################################################
properties:
  configurationVersion: 0.2.0
  resources:
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: k6
      directives:
        description: Install k6 load testing
        allowPrerelease: true
      settings:
        id: k6.k6
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Postman
      directives:
        description: Install Postman
        allowPrerelease: true
      settings:
        id: Postman.Postman
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: StoplightStudio
      directives:
        description: Install Stoplight Studio
        allowPrerelease: true
      settings:
        id: Stoplight.Studio
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: VisualStudioCode
      directives:
        description: Install Visual Studio Code
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
    - resource: PSDscResources/Script
      id: VisualStudioCode Extensions
      directives:
        description: Script to install Powershell extensions
        allowPrerelease: true
      settings:
        GetScript: |
          # Not using this at the moment.
        TestScript: |
          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\rest-api-configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = code --list-extensions

          # Check if all required extensions are installed
          $allInstalled = $extensions.name | ForEach-Object { $_ -in $installedExtensions }

          return $allInstalled -contains $false -eq $false
        SetScript: |
          # Ignore deprecation warnings & reload path
          $env:NODE_OPTIONS="--no-deprecation"
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\rest-api-configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Install each extension
          foreach ($extension in $extensions) {
            code --install-extension $extension.name
          }
      dependsOn:
        - VisualStudioCode